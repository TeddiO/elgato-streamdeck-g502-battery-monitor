name: Build & Publish

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prevent recursion
        run: |
          if git log -1 --pretty=%B | grep -q '\[skip ci\]'; then
            exit 0
          fi

      - name: Get PR number
        id: get_pr
        run: |
          PR_NUM=$(curl -s -H "Accept: application/vnd.github.groot-preview+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/pulls" \
            | jq -r '.[0].number // empty')
          echo "PR_NUM=$PR_NUM" >> $GITHUB_ENV

      - name: Skip if not a PR merge
        if: env.PR_NUM == ''
        run: exit 0

      - name: Get PR details
        run: |
          PR_INFO=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUM}")
          AUTHOR=$(echo "$PR_INFO" | jq -r .user.login)
          LABELS=$(echo "$PR_INFO" | jq -r '.labels[].name')
          echo "AUTHOR=$AUTHOR" >> $GITHUB_ENV
          echo "LABELS<<EOF" >> $GITHUB_ENV
          echo "$LABELS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Determine bump type
        run: |
          if [[ "$AUTHOR" == "dependabot[bot]" ]]; then
            BUMP=patch
          else
            for lbl in $LABELS; do
              case $lbl in
                major)    BUMP=major ;;
                minor)    BUMP=minor ;;
                revision) BUMP=patch ;;
                version)  BUMP=patch ;;
              esac
            done
          fi
          if [ -z "$BUMP" ]; then
            echo "No version bump label on PR #$PR_NUM" >&2
            exit 1
          fi
          echo "BUMP=$BUMP" >> $GITHUB_ENV

      - name: Bump version
        run: |
          npm version $BUMP --no-git-tag-version
          NEW_VER=$(jq -r .version package.json)
          jq --arg v "$NEW_VER" '.Version=$v' com.teddi.g502-battery-monitor.sdPlugin/manifest.json \
            > tmp && mv tmp com.teddi.g502-battery-monitor.sdPlugin/manifest.json
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json com.teddi.g502-battery-monitor.sdPlugin/manifest.json
          git commit -m "chore: bump version to v$NEW_VER [skip ci]"
          git push
          echo "VERSION=v$NEW_VER" >> $GITHUB_ENV

      - uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: true

      - name: Build
        run: pnpm build

      - name: Zip artifact
        run: zip -r com.teddi.g502-battery-monitor.sdPlugin.zip com.teddi.g502-battery-monitor.sdPlugin

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          files: com.teddi.g502-battery-monitor.sdPlugin.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          body: "Release ${{ env.VERSION }}"
          draft: false
          prerelease: false
          make_latest: true
          generate_release_notes: true
